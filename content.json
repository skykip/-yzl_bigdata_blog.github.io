{"meta":{"title":"skykip's Wiki","subtitle":"","description":"","author":"yzl","url":"https://skykip.github.io/pokemon_bigdata_blog","root":"/pokemon_bigdata_blog/"},"pages":[{"title":"Categories","date":"2023-01-07T13:12:35.663Z","updated":"2023-01-07T13:12:35.663Z","comments":true,"path":"categories/index.html","permalink":"https://skykip.github.io/pokemon_bigdata_blog/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2023-01-07T13:12:35.668Z","updated":"2023-01-07T13:12:35.668Z","comments":true,"path":"tags/index.html","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/index.html","excerpt":"","text":""},{"title":"About","date":"2023-01-07T13:12:35.663Z","updated":"2023-01-07T13:12:35.663Z","comments":true,"path":"about/index.html","permalink":"https://skykip.github.io/pokemon_bigdata_blog/about/index.html","excerpt":"","text":"test"}],"posts":[{"title":"Hive3安装及其基本配置","slug":"Hive3安装","date":"2023-01-18T12:51:40.927Z","updated":"2023-01-18T13:19:37.211Z","comments":true,"path":"2023/01/18/Hive3安装/","link":"","permalink":"https://skykip.github.io/pokemon_bigdata_blog/2023/01/18/Hive3%E5%AE%89%E8%A3%85/","excerpt":"","text":"Hive3安装 Mysql安装 卸载Centos7自带的mariadb 123456[root@node1 ~]# rpm -qa|grep mariadbmariadb-libs-5.5.64-1.el7.x86_64[root@node1 ~]# rpm -e mariadb-libs-5.5.64-1.el7.x86_64 --nodeps[root@node1 ~]# rpm -qa|grep mariadb [root@node1 ~]# 安装mysql 1234567891011121314151617mkdir /export/server/mysql#上传mysql-5.7.29-1.el7.x86_64.rpm-bundle.tar 到上述文件夹下 解压tar xvf mysql-5.7.29-1.el7.x86_64.rpm-bundle.tar#执行安装yum -y install libaio[root@node3 mysql]# rpm -ivh mysql-community-common-5.7.29-1.el7.x86_64.rpm mysql-community-libs-5.7.29-1.el7.x86_64.rpm mysql-community-client-5.7.29-1.el7.x86_64.rpm mysql-community-server-5.7.29-1.el7.x86_64.rpm warning: mysql-community-common-5.7.29-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing... ################################# [100%]Updating / installing... 1:mysql-community-common-5.7.29-1.e################################# [ 25%] 2:mysql-community-libs-5.7.29-1.el7################################# [ 50%] 3:mysql-community-client-5.7.29-1.e################################# [ 75%] 4:mysql-community-server-5.7.29-1.e################ ( 49%) mysql初始化设置 12345678910111213#初始化mysqld --initialize#更改所属组chown mysql:mysql /var/lib/mysql -R#启动mysqlsystemctl start mysqld.service#查看生成的临时root密码cat /var/log/mysqld.log[Note] A temporary password is generated for root@localhost: o+TU+KDOm004 修改root密码 授权远程访问 设置开机自启动 1234567891011121314151617181920212223242526272829303132333435363738394041[root@node2 ~]# mysql -u root -pEnter password: #这里输入在日志中生成的临时密码Welcome to the MySQL monitor. Commands end with ; or \\g.Your MySQL connection id is 3Server version: 5.7.29Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &#x27;help;&#x27; or &#x27;\\h&#x27; for help. Type &#x27;\\c&#x27; to clear the current input statement.mysql&gt; #更新root密码 设置为hadoopmysql&gt; alter user user() identified by &quot;hadoop&quot;;Query OK, 0 rows affected (0.00 sec)#授权mysql&gt; use mysql;mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;hadoop&#x27; WITH GRANT OPTION;mysql&gt; FLUSH PRIVILEGES; #mysql的启动和关闭 状态查看 （这几个命令必须记住）systemctl stop mysqldsystemctl status mysqldsystemctl start mysqld#建议设置为开机自启动服务[root@node1 ~]# systemctl enable mysqld Created symlink from /etc/systemd/system/multi-user.target.wants/mysqld.service to /usr/lib/systemd/system/mysqld.service.#查看是否已经设置自启动成功[root@node2 ~]# systemctl list-unit-files | grep mysqldmysqld.service enabled Centos7 干净卸载mysql 5.7 1234567891011121314151617181920212223242526272829#关闭mysql服务systemctl stop mysqld.service#查找安装mysql的rpm包[root@node3 ~]# rpm -qa | grep -i mysql mysql-community-libs-5.7.29-1.el7.x86_64mysql-community-common-5.7.29-1.el7.x86_64mysql-community-client-5.7.29-1.el7.x86_64mysql-community-server-5.7.29-1.el7.x86_64#卸载[root@node3 ~]# yum remove mysql-community-libs-5.7.29-1.el7.x86_64 mysql-community-common-5.7.29-1.el7.x86_64 mysql-community-client-5.7.29-1.el7.x86_64 mysql-community-server-5.7.29-1.el7.x86_64#查看是否卸载干净rpm -qa | grep -i mysql#查找mysql相关目录 删除[root@node1 ~]# find / -name mysql/var/lib/mysql/var/lib/mysql/mysql/usr/share/mysql[root@node1 ~]# rm -rf /var/lib/mysql[root@node1 ~]# rm -rf /var/lib/mysql/mysql[root@node1 ~]# rm -rf /usr/share/mysql#删除默认配置 日志rm -rf /etc/my.cnf rm -rf /var/log/mysqld.log Hive的安装 上传安装包 解压 12tar zxvf apache-hive-3.1.2-bin.tar.gzln -s apache-hive-3.1.2-bin hive 解决Hive与Hadoop之间guava版本差异 123cd /export/server/hive/rm -rf lib/guava-19.0.jarcp /export/server/hadoop/share/hadoop/common/lib/guava-27.0-jre.jar ./lib/ 修改配置文件 hive-env.sh 1234567cd /export/server/hive/confmv hive-env.sh.template hive-env.shvim hive-env.shexport HADOOP_HOME=/export/server/hadoopexport HIVE_CONF_DIR=/export/server/hive/confexport HIVE_AUX_JARS_PATH=/export/server/hive/lib hive-site.xml 1vim hive-site.xml 1234567891011121314151617181920212223242526272829303132333435363738394041&lt;configuration&gt;&lt;!-- 存储元数据mysql相关配置 --&gt;&lt;property&gt; &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt; &lt;value&gt;jdbc:mysql://node1:3306/hive3?createDatabaseIfNotExist=true&amp;amp;useSSL=false&amp;amp;useUnicode=true&amp;amp;characterEncoding=UTF-8&lt;/value&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt; &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt; &lt;value&gt;root&lt;/value&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt; &lt;value&gt;hadoop&lt;/value&gt;&lt;/property&gt;&lt;!-- H2S运行绑定host --&gt;&lt;property&gt; &lt;name&gt;hive.server2.thrift.bind.host&lt;/name&gt; &lt;value&gt;node1&lt;/value&gt;&lt;/property&gt;&lt;!-- 远程模式部署metastore metastore地址 --&gt;&lt;property&gt; &lt;name&gt;hive.metastore.uris&lt;/name&gt; &lt;value&gt;thrift://node1:9083&lt;/value&gt;&lt;/property&gt;&lt;!-- 关闭元数据存储授权 --&gt; &lt;property&gt; &lt;name&gt;hive.metastore.event.db.notification.api.auth&lt;/name&gt; &lt;value&gt;false&lt;/value&gt;&lt;/property&gt;&lt;/configuration&gt; 上传mysql jdbc驱动到hive安装包lib下 1mysql-connector-java-5.1.32.jar 初始化元数据 1234cd /export/server/hive/bin/schematool -initSchema -dbType mysql -verbos#初始化成功会在mysql中创建74张表 在hdfs创建hive存储目录（如存在则不用操作） 1234hadoop fs -mkdir /tmphadoop fs -mkdir -p /user/hive/warehousehadoop fs -chmod g+w /tmphadoop fs -chmod g+w /user/hive/warehouse &#x3D;&#x3D;启动hive&#x3D;&#x3D; 1、启动metastore服务 12345678#前台启动 关闭ctrl+c/export/server/hive/bin/hive --service metastore#前台启动开启debug日志/export/server/hive/bin/hive --service metastore --hiveconf hive.root.logger=DEBUG,console #后台启动 进程挂起 关闭使用jps+ kill -9nohup /export/server/hive/bin/hive --service metastore &amp; 2、启动hiveserver2服务 123nohup /export/server/hive/bin/hive --service hiveserver2 &amp; #注意 启动hiveserver2需要一定的时间 不要启动之后立即beeline连接 可能连接不上 3、beeline客户端连接 拷贝node1安装包到beeline客户端机器上（node3） 1scp -r /export/server/apache-hive-3.1.2-bin/ root@node3:/export/server/ 错误 1Error: Could not open client transport with JDBC Uri: jdbc:hive2://node1:10000: Failed to open new session: java.lang.RuntimeException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.security.authorize.AuthorizationException): User: root is not allowed to impersonate root (state=08S01,code=0) 修改 123456789 在hadoop的配置文件core-site.xml中添加如下属性： &lt;property&gt; &lt;name&gt;hadoop.proxyuser.root.hosts&lt;/name&gt; &lt;value&gt;*&lt;/value&gt; &lt;/property&gt;&lt;property&gt; &lt;name&gt;hadoop.proxyuser.root.groups&lt;/name&gt; &lt;value&gt;*&lt;/value&gt; &lt;/property&gt; 连接访问 12345/export/server/hive/bin/beelinebeeline&gt; ! connect jdbc:hive2://node1:10000beeline&gt; rootbeeline&gt; 直接回车 错误解决：&#x3D;&#x3D;Hive3执行insert插入操作 statstask异常&#x3D;&#x3D; 现象 1在执行insert + values操作的时候 虽然最终执行成功，结果正确。但是在执行日志中会出现如下的错误信息。 开启hiveserver2执行日志。查看详细信息 1232020-11-09 00:37:48,963 WARN [5ce14c58-6b36-476a-bab8-89cba7dd1706 main] metastore.RetryingMetaStoreClient: MetaStoreClient lost connection. Attempting to reconnect (1 of 1) after 1s. setPartitionColumnStatisticsERROR [5ce14c58-6b36-476a-bab8-89cba7dd1706 main] exec.StatsTask: Failed to run stats task 但是 &#x3D;&#x3D;此错误并不影响最终的插入语句执行成功&#x3D;&#x3D;。 分析原因和解决 statstask是一个hive中用于统计插入等操作的状态任务 其返回结果如下 此信息类似于计数器 用于告知用户插入数据的相关信息 但是不影响程序的正常执行。 Hive新版本中 这是一个issues 临时解决方式如下 https://community.cloudera.com/t5/Support-Questions/Hive-Metastore-Connection-Failure-then-Retry/td-p/151661 &#x3D;&#x3D;在mysql metastore中删除 PART_COL_STATS这张表即可&#x3D;&#x3D;。 hive注释信息中文乱码解决–注意 下面sql语句是需要在MySQL中执行 修改Hive存储的元数据信息（metadata） 12345678use hivenode2;show tables;alter table hivenode2.COLUMNS_V2 modify column COMMENT varchar(256) character set utf8;alter table hivenode2.TABLE_PARAMS modify column PARAM_VALUE varchar(4000) character set utf8;alter table hivenode2.PARTITION_PARAMS modify column PARAM_VALUE varchar(4000) character set utf8 ;alter table hivenode2.PARTITION_KEYS modify column PKEY_COMMENT varchar(4000) character set utf8;alter table hivenode2.INDEX_PARAMS modify column PARAM_VALUE varchar(4000) character set utf8;","categories":[{"name":"大数据组件","slug":"大数据组件","permalink":"https://skykip.github.io/pokemon_bigdata_blog/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%BB%84%E4%BB%B6/"}],"tags":[{"name":"bigdata","slug":"bigdata","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/bigdata/"},{"name":"hive","slug":"hive","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/hive/"}]},{"title":"git 对于github与gitee基本配置","slug":"git配置","date":"2023-01-10T02:54:08.147Z","updated":"2023-01-10T03:02:32.574Z","comments":true,"path":"2023/01/10/git配置/","link":"","permalink":"https://skykip.github.io/pokemon_bigdata_blog/2023/01/10/git%E9%85%8D%E7%BD%AE/","excerpt":"","text":"git基本配置12345678910111213git config --global user.name &quot;username&quot; //（ &quot;username&quot;是自己的账户名，）git config --global user.email &quot;username@email.com&quot; ssh-keygen -t rsa -b 4096 -C &quot;469307379@qq.com&quot; -f &quot;id_rsa_github&quot;ssh-keygen -t rsa -b 4096 -C &quot;469307379@qq.com&quot; -f &quot;id_rsa_gitee&quot;ssh-agent bashssh-add ~/.ssh/id_rsa_githubssh-add ~/.ssh/id_rsa_giteecat ~/.ssh/id_rsa_gitee.pub cat ~/.ssh/id_rsa_github.pub 将公钥部署到github和gitee上然后尝试连接12ssh -T git@gitee.comssh -T git@github.com 假设开发了一个新项目，想推送到远程，具体的操作方式和命令如下：123456789101112131415161718192021222324252627282930313233343536（使用 git bash）1、切到项目目录中，例如 E:\\httpRunner_study2、初始化git仓库并在本地提交//初始化git仓库 git init//将当前目录下的文件添加到仓库（缓冲区）git add .//提交到本地仓库git commit -m &quot;init project&quot;3、把本地仓库和远程关联，并推送到远程//与远程仓库关联git remote add origin 远程仓库地址//例如: 关联一个远程库时必须给远程库指定一个名字，origin是默认习惯命名；git remote add origin git@server-name:path/repo-name.git//推送到远程仓库git push -u origin master执行以上操作就可以把本地新建的项目推送到 git 远程仓库了。但在实际操作中，最后一步推送命令会报错，提示需要先 git pull 更新，而如果执行 git pull 或者 git pull origin master 都无法成功执行，会有其他的报错。解决方案是，使用如下命令，强制推送到远程（可能会覆盖远程上已有分支、文件，使用前需要注意）//强制推送到远程（可能会覆盖远程上已有的分支或文件）git push -u origin master -f注意：仅第一次需要这样执行，后续在推送代码时，git push 命令不需要再加上 -u 或者 -f 命令，使用正常推送命令就行了。推送成功以后，就可以在本地项目中正常使用 git 命令进行更新、提交、推送等操作了。","categories":[{"name":"工具","slug":"工具","permalink":"https://skykip.github.io/pokemon_bigdata_blog/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/hexo/"},{"name":"搭建","slug":"搭建","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/%E6%90%AD%E5%BB%BA/"},{"name":"git","slug":"git","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/git/"}]},{"title":"Wikitten主题-中文文档","slug":"Wikitten主题中文文档","date":"2023-01-09T12:51:48.532Z","updated":"2023-01-18T13:17:19.394Z","comments":true,"path":"2023/01/09/Wikitten主题中文文档/","link":"","permalink":"https://skykip.github.io/pokemon_bigdata_blog/2023/01/09/Wikitten%E4%B8%BB%E9%A2%98%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3/","excerpt":"","text":"English Page 一个仿 Wikitten 样式的 Hexo 个人 wiki 系统主题。 &gt;预览一些特性： 适用于个人 wiki 知识管理 简洁，双栏，分类 将知识多级分类整理，侧边分级展开，为思维跳转设计 根据文件路径自动为文章添加分类 安装说明hexo-theme-Wikitten 核心功能代码基于 icarus，所以你可以在 icarus wiki 阅读基础功能文档。 安装注意：本主题需要 Hexo v3.6 及以上版本。 进入你的 hexo 站点文件夹，克隆 Wikitten 主题到 themes/ 路径下 12$ cd your-hexo-directory$ git clone https://github.com/zthxxx/hexo-theme-Wikitten.git themes/Wikitten 覆盖站点目录中一些默认页面模板 12$ cp -rf themes/Wikitten/_source/* source/$ cp -rf themes/Wikitten/_scaffolds/* scaffolds/ 重命名主题中的 _config.yml.example 到 _config.yml，然后可以使用配置文件配置主题 123$ cp -f themes/Wikitten/_config.yml.example themes/Wikitten/_config.yml# 编辑配置文件，定制你的配置项$ vim themes/Wikitten/_config.yml 大部分的配置项都和 icarus 主题中的配置项一样，你可以首先去阅读一下 icraus 的文档。 一些你可以开箱即用的推荐配置见下面的文档：#Configuration 需要安装的插件写在主题的 package.json 文件中 这里列出了这些插件的功能作用： 12345hexo-autonofollow // 打开非本站链接时自动开启新标签页hexo-directory-category // 根据文章文件目录自动为文章添加分类hexo-generator-feed // 生成 RSS 源hexo-generator-json-content // 生成全站文章 json 内容，用于全文搜索hexo-generator-sitemap // 生成全站站点地图 sitemap 你可以将这些插件合并到站点的 package.json 文件中通过 npm install 一次安装， 或者在站点目录下，你可以通过以下命令安装他们： 1$ npm i -S hexo-autonofollow hexo-directory-category hexo-generator-feed hexo-generator-json-content hexo-generator-sitemap 配置mathjax渲染（可选）： 如果你在博客中需要撰写数学公式，推荐进行以下配置： 首先安装pandoc，同时在hexo站点下修改渲染引擎： 12$ npm un hexo-renderer-marked --save$ npm i hexo-rendere-pandoc --save # or hexo-renderer-krammed 然后将以下配置加到站点_config.yml文件中： 123math: enable: true engine: mathjax 启用修改站点 _config.yml 文件中的 theme 选项为 **Wikitten**。 更新12$ cd themes/Wikitten$ git pull origin master 配置说明在站点配置文件 _config.yml 中， 推荐配置为： 123456789101112131415161718192021222324252627282930313233343536373839404142434445# Hexo Configuration# URLpermalink: wiki/:title/# Directoryskip_render: - README.md - &#x27;_posts/**/embed_page/**&#x27;# Writingnew_post_name: :title.md # File name of new posts## Markdown## https://github.com/hexojs/hexo-renderer-markedmarked: gfm: true ## Plugins: https://hexo.io/plugins/### JsonContentjsonContent: meta: false pages: title: true date: true path: true text: true posts: title: true date: true path: true text: true tags: true categories: true ignore: - 404.html ### Creat sitemapsitemap: path: sitemap.xml### Adds nofollow attribute to all external links in your hexo blog posts automatically.nofollow: enable: true exclude: - &lt;your site url domain&gt; # eg: zthxxx.me 在主题配置文件 Wikitten/_config.yml 中，你能阅读到各个选项更多的细节配置。 在开始之前，首先请将主题配置文件示例中「我」的信息修改为「你」自己的信息，其中包括 profile social_links history_control等配置项。 profile、comment、Share 和 miscellaneous 项都是 默认关闭的！（你任然可以打开那些选项，只是不推荐这样做。） 其他的 推荐设置为： 12345678910111213141516171819202122# Customizecustomize: # 首先修改这项里面的信息为你自己的各项信息 sidebar: left # 侧边栏的所在位置，默认左边 category_perExpand: false # 侧边栏里的各个分类是否默认全部展开 default_index_file: index.md # 是否指定一篇文章作为首页来代替默认的多篇文章的首页，没有此项的话就会显示默认的按时间顺序排列的文章 # Widgetswidgets: # 挂件，默认指开启了分类这一栏 - category # - recent_posts # - archive # - tag # - tagcloud # - links # History version history_control: # 启用这一项使得 wiki 能有历史版本的功能（查看源码、在线编辑、对比历史变动） enable: true server_link: https://github.com # 版本控制服务器，推荐使用 GitHub https://github.com user: &lt;your GitHub name&gt; repertory: &lt;your repertory name of this wiki source code&gt; branch: &lt;branch name of this wiki site source code&gt; 版权协议MIT LICENSE","categories":[{"name":"工具","slug":"工具","permalink":"https://skykip.github.io/pokemon_bigdata_blog/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/hexo/"},{"name":"主题","slug":"主题","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/%E4%B8%BB%E9%A2%98/"},{"name":"搭建","slug":"搭建","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/%E6%90%AD%E5%BB%BA/"}]},{"title":"welcome skykip's Wiki Site","slug":"welcome","date":"2023-01-09T12:51:48.530Z","updated":"2023-01-07T13:12:35.663Z","comments":true,"path":"2023/01/09/welcome/","link":"","permalink":"https://skykip.github.io/pokemon_bigdata_blog/2023/01/09/welcome/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"使用 Hexo+GitHub 搭建个人博客","slug":"hello-world","date":"2023-01-09T12:24:05.914Z","updated":"2023-01-07T13:12:35.662Z","comments":true,"path":"2023/01/09/hello-world/","link":"","permalink":"https://skykip.github.io/pokemon_bigdata_blog/2023/01/09/hello-world/","excerpt":"","text":"本文主要使用Hexo与Github进行个人blog的搭建Hexo官网：HexoGithub官网：Github 环境介绍博主的本地环境为：MacBook Air M1，Macos 11.2.2，Homebrew 3.4.5 开始搭建1.安装 node与npm12345678$ brew install node$ brew install npm$ node$ Welcome to Node.js v17.8.0.$ npm -version$ 8.6.0 2.安装Hexo12345# 使用npm安装Hexo$ npm install hexo-cli -g# 初始化Hexo blog$ hexo init blog 本地blog初始化成功，本地路径为/Users/username/blog 3.Hexo主题选择Hexo可在官网自由选择官网主题：HexoTheme进入主题页面，点击图片可对主题进行预览，点击蓝色主题名称可进入相应的主题Github主页 （1）主题下载123456#从终端进入blog项目中$ cd blog#使用git克隆相应主题到blog中#格式：git clone [url] themes/xxx#本博客采用Wikitten主题进行构建$ git clone https://github.com/zthxxx/hexo-theme-Wikitten themes/Wikitten （2）主题配置修改blog中的_config.yml文件 1theme: Wikitten 具体配置移步到Wikitten主题-中文文档 4.Github配置本地blog已经搭建完成，通过Github相应配置，即可将其部署到Github上。 （1）注册Github账号Github-signup （2）Github SSH免密码配置1）设置user.name和user.email配置信息： 12git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot; 2）查看本机是否存在.ssh文件 1234$ cd ~/.ssh$ lsauthorized_keys id_rsa known_hostsconfig id_rsa.pub 配置SHH免密码登录需要寻找一对id_rsa命名的文件，其中带.pub 扩展名的文件是公钥，另一个则为私钥。如果没有找不到这样的文件（或者根本就没有.ssh目录）可以通过ssh-keygen程序来创建它们。 12#邮箱填Github的注册邮箱$ ssh-keygen -t rsa -C &quot;xx@xx.com&quot; ssh-keygen会确认密钥的存储位置和文件名（默认是 .ssh&#x2F;id_rsa）,然后他会要求你输入两次密钥口令，留空即可。所以一般选用默认，全部回车即可。 3）Github配置登陆到GitHub，右上角小头像-&gt;Setting-&gt;SSH and GPG keys中，点击new SSH key。Title：可以随便填写，但最好起的名字能让自己知道这个公钥是哪个设备的。Key：将上面生成的.pub文件中的所有内容复制到这里。点击下面的Add SSH key即可。就可实现SSH免密码访问。 （3）Github 远程仓库配置1）在github上创建一个仓库username.github.io username为自己的github用户名 2）安装hexo部署插件 1$ npm install hexo-deployer-git --save 3）配置Blog的_comfig.yml文件 12345# 配置hexo把blog部署到github仓库里deploy: type: git repository: git@github.com:username/username.github.io.git branch: master 4）使用Hexo d即可将Blog部署到Github上 5.Hexo常用命令（三连）1234567#打开 Git bash#清除生成的网页文件$ hexo clean#生成网页文件$ hexo g#上传网页文件到 Github page$ hexo d 6.快捷命令通过使用alias，触发一些命令的集合在 ~/.bashrc 文件中添加 123$ alias hs=&#x27;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&#x27; #启动本地服务$ alias hd=&#x27;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; git add . &amp;&amp; git commit -m &quot;update&quot; &amp;&amp; git push -f&#x27; #部署博客$ source ~/.bashrc #刷新配置文件","categories":[{"name":"工具","slug":"工具","permalink":"https://skykip.github.io/pokemon_bigdata_blog/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/hexo/"},{"name":"搭建","slug":"搭建","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/%E6%90%AD%E5%BB%BA/"}]}],"categories":[{"name":"大数据组件","slug":"大数据组件","permalink":"https://skykip.github.io/pokemon_bigdata_blog/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%BB%84%E4%BB%B6/"},{"name":"工具","slug":"工具","permalink":"https://skykip.github.io/pokemon_bigdata_blog/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"bigdata","slug":"bigdata","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/bigdata/"},{"name":"hive","slug":"hive","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/hive/"},{"name":"hexo","slug":"hexo","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/hexo/"},{"name":"搭建","slug":"搭建","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/%E6%90%AD%E5%BB%BA/"},{"name":"git","slug":"git","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/git/"},{"name":"主题","slug":"主题","permalink":"https://skykip.github.io/pokemon_bigdata_blog/tags/%E4%B8%BB%E9%A2%98/"}]}